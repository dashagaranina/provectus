<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>worker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>worker</name>
	<description>Provectus Task 2: Worker service for Distributed solution</description>

	<parent>
		<groupId>com.provectus</groupId>
		<artifactId>provectus</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<docker.image.name>dariagaran/worker</docker.image.name>
		<docker.image.tag>${project.version}</docker.image.tag>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<!-- here the phase you need -->
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/dockerfile</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/docker</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.1.0</version>
						<executions>
							<execution>
								<id>remove-image</id>
								<goals>
									<goal>removeImage</goal>
								</goals>
								<configuration>
									<imageName>${docker.image.name}</imageName>
									<imageTags>
										<imageTag>
											${docker.image.tag}
										</imageTag>
									</imageTags>
								</configuration>
								<phase>clean</phase>
							</execution>
							<execution>
								<id>build-image</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<imageName>${docker.image.name}:${docker.image.tag}</imageName>
							<dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>
					</plugin>
				</plugins>

			</build>
		</profile>
	</profiles>

</project>
